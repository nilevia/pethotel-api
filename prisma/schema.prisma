// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model authentication {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  ref_id     String
  ref_table  String
  token      String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model user {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String   @unique
  phone      String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  // relation
  order      order[]
}

model admin {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  email      String   @unique
  password   String
  salt       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model vendor {
  id           String          @id @default(auto()) @map("_id") @db.ObjectId
  email        String          @unique
  password     String
  salt         String
  saldo        Int             @default(0)
  name         String
  image        String?
  images       vendor_images[]
  city         String?
  district     String?
  phone        String?
  description  String?
  rating       Float?
  rating_count Int?
  price        Int?
  status       Boolean?        @default(true)
  address      String?
  lat          Float?
  lon          Float?
  created_at   DateTime        @default(now())
  updated_at   DateTime        @updatedAt
  // relation
  rooms        room[]
  order        order[]
}

model vendor_images {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  vendor_id  String   @db.ObjectId
  image      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  // relation
  vendor     vendor   @relation(fields: [vendor_id], references: [id])

  @@index([vendor_id])
}

model room {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  vendor_id   String   @db.ObjectId
  name        String
  image       String
  description String
  max_pet     Int
  price       Int
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  // relation
  vendor      vendor   @relation(fields: [vendor_id], references: [id])
  order       order[]

  @@index([vendor_id])
}

model order {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  user_id        String   @db.ObjectId
  vendor_id      String   @db.ObjectId
  room_id        String   @db.ObjectId
  start_date     DateTime
  end_date       DateTime
  room_name      String
  initial_price  Int
  total_price    Int
  total_pet      Int
  service_fee    Int
  payment_status Int      @default(0)
  order_status   Int      @default(0)
  notes          String
  expired_at     DateTime
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  // relation
  animals        animal[]
  user           user     @relation(fields: [user_id], references: [id])
  vendor         vendor   @relation(fields: [vendor_id], references: [id])
  room           room     @relation(fields: [room_id], references: [id])
  reports        report[]

  @@index([user_id, vendor_id])
}

model animal {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  order_id   String   @db.ObjectId
  kind       String
  name       String
  age        String
  color      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  // relation
  order      order    @relation(fields: [order_id], references: [id])

  @@index([order_id])
}

model report {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  order_id    String   @db.ObjectId
  user_id     String   @db.ObjectId
  vendor_id   String   @db.ObjectId
  image       String
  description String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  // relation
  order       order    @relation(fields: [order_id], references: [id])

  @@index([order_id])
}

// model payment {
//   id         String   @id @default(auto()) @map("_id") @db.ObjectId
//   order_id   String   @unique @db.ObjectId
//   user_id    String   @db.ObjectId
//   vendor_id  String   @db.ObjectId
//   status     Float
//   expired_at DateTime
//   amount     Float
//   qris_image String
//   created_at DateTime @default(now())
//   updated_at DateTime @updatedAt
//   // relation
//   order      order    @relation(fields: [order_id], references: [id])
// }

model city {
  id         String   @id @map("_id")
  name       String   @unique
  status     Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model config {
  id         String   @id @map("_id")
  field      String   @unique
  value      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
